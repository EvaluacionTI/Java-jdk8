# INTERNALIZACIÃ“N

## 10. Consider the three SQL statements:
	SELECT CONVERT(datetime, 'NOV 23 2005');
	SELECT CONVERT(datetime, (TRIM(' NOV 23 2005')));
	SELECT CONVERT(datetime, (LTRIM(' NOV 23 2005')));
	
	Which of these statements gives the same output?
	
	Pick one of the choices:
	
	Only statement1 and statement2
	Only statement1 and statement3
	Only statement2 and statement3
	All the three statement give the same output
	
	Result en Postgres :
	
	:::
		SELECT CAST('NOV 23 2005' AS TIMESTAMP);
		SELECT CAST((TRIM(' NOV 23 2005')) AS TIMESTAMP);
		SELECT CAST((LTRIM(' NOV 23 2005')) AS TIMESTAMP);
		
		SELECT	CAST('NOV 23 2005' AS DATE) AS F1, CAST('NOV 23 2005' AS TIMESTAMP) AS F2, 
				CAST((TRIM(' NOV 23 2005')) AS TIMESTAMP) AS F3, CAST((LTRIM(' NOV 23 2005')) AS TIMESTAMP) AS F4;
	:::
	

## 11. Students and Examination
	A college maintains the data of its students and appeared examinatios in two tables: STUDENT
	and EXAMINATION. A student could appear in a subject examination more than once. Write a 
	query to print the student ID, the subject name, and the total number ot times the student
	appeared in this subject examination. The order of output does not matter. The result should
	be in the following format: STUDENT.ID EXAMINATION.SUBJECT NUMBER_OF_TIMES.


	Result en Postgres :
	:::
	CREATE TABLE APXt01_STUDENT
	(
		ID		INT,
		NAME	VARCHAR(30),
		CONSTRAINT PKAPXt01_id PRIMARY KEY (id)
	);
	
	CREATE TABLE APXt02_EXAMINATION
	(
		ID_EXA	INT,
		ID		INT,
		SUBJECT	VARCHAR(30),
		
		CONSTRAINT PKAPXt02_id_exa PRIMARY KEY (id_exa),
		CONSTRAINT FKAPXt02_id FOREIGN KEY(id) REFERENCES APXt01_STUDENT(id)
	);
	
	INSERT INTO APXt01_STUDENT VALUES (1, 'ESTEBAN');
	INSERT INTO APXt01_STUDENT VALUES (2, 'ILLARI');
	INSERT INTO APXt01_STUDENT VALUES (3, 'ALEX');
	INSERT INTO APXt01_STUDENT VALUES (4, 'SAYRIK');
	
	INSERT INTO APXt02_EXAMINATION VALUES (1, 1, 'INGLES');
	INSERT INTO APXt02_EXAMINATION VALUES (2, 2, 'CASTELLANO');
	INSERT INTO APXt02_EXAMINATION VALUES (3, 3, 'ITALIANO');
	INSERT INTO APXt02_EXAMINATION VALUES (4, 4, 'QUECHUA');
	INSERT INTO APXt02_EXAMINATION VALUES (5, 4, 'ITALIANO');
	INSERT INTO APXt02_EXAMINATION VALUES (6, 2, 'INGLES');
	INSERT INTO APXt02_EXAMINATION VALUES (7, 2, 'FRANCES');
	
	
	SELECT			TS.ID, TS.NAME, COUNT(TE.SUBJECT) AS NUMBER_OF_TIMES
		FROM		APXt01_STUDENT		TS,
					APXt02_EXAMINATION	TE
		WHERE		TS.ID	=	TE.ID
		GROUP BY 	TS.ID, TS.NAME;
	:::


## 12. Multiple Choice

	Table EMPLOYES has 5 rows. 
	
	Result en Postgres :
	:::
	
	CREATE TABLE APXt03_EMPLOYES
	(
		ID		INT,
		NAME	VARCHAR(30),
		CONSTRAINT PKAPXt03_id PRIMARY KEY (id)
	);
	
	INSERT INTO APXt03_EMPLOYES VALUES (0, 'MERY');
	INSERT INTO APXt03_EMPLOYES VALUES (1, 'ESTEBAN');
	INSERT INTO APXt03_EMPLOYES VALUES (2, 'ILLARI');
	INSERT INTO APXt03_EMPLOYES VALUES (3, 'ALEX');
	INSERT INTO APXt03_EMPLOYES VALUES (4, 'SAYRIK');
	
	
	CREATE TABLE myTable AS (SELECT * FROM APXt03_EMPLOYES);
	SELECT * FROM myTable; -- 5reg
	
	INSERT INTO myTable SELECT * FROM myTable;
	SELECT * FROM myTable; -- 10reg
	
	INSERT INTO myTable SELECT * FROM myTable;
	SELECT * FROM myTable; -- 20reg
	
	INSERT INTO myTable SELECT * FROM myTable;
	SELECT * FROM myTable; -- 40reg
	
	INSERT INTO myTable SELECT * FROM myTable
	SELECT * FROM myTable; -- 80reg
